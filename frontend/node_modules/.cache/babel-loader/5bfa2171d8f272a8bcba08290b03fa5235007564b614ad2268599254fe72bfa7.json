{"ast":null,"code":"var _jsxFileName = \"/Users/musawer/CodingProjects/SilverProj/frontend/src/pages/pricespage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PricesPage() {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const [productId, setProductId] = useState('');\n  const [granularity, setGranularity] = useState('');\n  const fetchCandles = e => {\n    e.preventDefault();\n    // Validate input fields are not empty\n    if (!productId || !granularity) {\n      console.error('Product ID and granularity are required');\n      return; // Exit if any field is empty\n    }\n    const url = `http://localhost:4000/product-candles?productId=${productId}&granularity=${granularity}&start=2022-01-01&end=2022-01-02`;\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Check if data is in the expected format\n      if (!data.length) {\n        throw new Error('No data available');\n      }\n      setChartData({\n        labels: data.map(d => new Date(d[0] * 1000).toLocaleTimeString()),\n        datasets: [{\n          label: 'Price',\n          data: data.map(d => d[4]),\n          // Ensure this index corresponds to closing prices\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      });\n    }).catch(error => {\n      console.error('Error fetching product candles:', error);\n      // Handle errors appropriately in the UI as well\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Historical Prices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fetchCandles,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: productId,\n        onChange: e => setProductId(e.target.value),\n        placeholder: \"Product ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: granularity,\n        onChange: e => setGranularity(e.target.value),\n        placeholder: \"Granularity (e.g., 3600)\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Load Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), chartData && chartData.datasets && chartData.datasets.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(PricesPage, \"ZEVerjkQtQ60/lkPShVyN5/y808=\");\n_c = PricesPage;\nexport default PricesPage;\nvar _c;\n$RefreshReg$(_c, \"PricesPage\");","map":{"version":3,"names":["React","useState","Line","jsxDEV","_jsxDEV","PricesPage","_s","chartData","setChartData","productId","setProductId","granularity","setGranularity","fetchCandles","e","preventDefault","console","error","url","fetch","then","response","ok","Error","json","data","length","labels","map","d","Date","toLocaleTimeString","datasets","label","fill","borderColor","tension","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/musawer/CodingProjects/SilverProj/frontend/src/pages/pricespage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nfunction PricesPage() {\n    const [chartData, setChartData] = useState({});\n    const [productId, setProductId] = useState('');\n    const [granularity, setGranularity] = useState('');\n\n    const fetchCandles = (e) => {\n        e.preventDefault();\n        // Validate input fields are not empty\n        if (!productId || !granularity) {\n            console.error('Product ID and granularity are required');\n            return; // Exit if any field is empty\n        }\n\n        const url = `http://localhost:4000/product-candles?productId=${productId}&granularity=${granularity}&start=2022-01-01&end=2022-01-02`;\n        fetch(url)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => {\n                // Check if data is in the expected format\n                if (!data.length) {\n                    throw new Error('No data available');\n                }\n                setChartData({\n                    labels: data.map(d => new Date(d[0] * 1000).toLocaleTimeString()),\n                    datasets: [{\n                        label: 'Price',\n                        data: data.map(d => d[4]), // Ensure this index corresponds to closing prices\n                        fill: false,\n                        borderColor: 'rgb(75, 192, 192)',\n                        tension: 0.1\n                    }]\n                });\n            })\n            .catch(error => {\n                console.error('Error fetching product candles:', error);\n                // Handle errors appropriately in the UI as well\n            });\n    };\n\n    return (\n        <div>\n            <h1>Historical Prices</h1>\n            <form onSubmit={fetchCandles}>\n                <input type=\"text\" value={productId} onChange={(e) => setProductId(e.target.value)} placeholder=\"Product ID\" required />\n                <input type=\"text\" value={granularity} onChange={(e) => setGranularity(e.target.value)} placeholder=\"Granularity (e.g., 3600)\" required />\n                <button type=\"submit\">Load Data</button>\n            </form>\n            {chartData && chartData.datasets && chartData.datasets.length > 0 ? (\n                <Line data={chartData} />\n            ) : (\n                <p>No data to display</p>\n            )}\n        </div>\n    );\n}\n\nexport default PricesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}